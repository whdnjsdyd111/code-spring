최근 '자동 로그인' 이나 '로그인 기억하기' 란 이름으로 일정시간 동인 다시 로그인 하지 않아도 되는 기능이 있다.
영어론 'remember-me' 라고 표현하는데 쿠키를 이용하여 구현된다.

스프링 시큐리티의 경우 'remember-me' 기능을 메모리상에 처리하거나, 데이터베이스를 이용하는 형태로 약간의 설정ㅇ로 구현 가능하다.
security-context.xml 에는 <security:remember-me> 태그를 이용한 기능을 구현한다.
<security:remember-me> 엔 아래와 같이 여러 속성값을 지정할 수 있다. 여러 속성 중에 주로 사용되는 속성은 다음과 같다.


    - key : 쿠기에 사용되는 값을 암호화하기 위해 키(key) 값
    - data-source-ref : DataSource 를 지정하고 테이블을 이용한 기존 로그인 정보를 기록(옵션)
    - remember-me-cookie : 브라우저에 보관되는 쿠키 이름을 지정한다. 기본값은 'remember-me' 이다.
    - remember-me-parameter : 웹 화면에서 로그인할 때 'remember-me' 는 대부분 체크박스를 이용하여 처리한다.
        이때 체크박스 태그는 name 속성을 의미한다.
    - token-validity-seconds : 쿠키의 유효시간을 지정한다.


            35.1 데이터베이스를 이용하는 자동 로그인

자동 로그인 기능 방식 중 데이터베이스를 이용해 기록해 두었다 사용자가 재방문 시 세션에 정보가 없으면 데이터베이스를 조회하여
사용하는 방식이다. 서버의 메모리상에만 데이터를 저장하는 방식보다 데이터베이스에 정보가 공유되어 더 안정적으로 운영이 가능하다.

스프링 시큐리티에서 'remember-me' 기능 역시 JDBC 를 이용하는 경우처럼 지정된 이름의 테이블을 생성하면
지정된 SQL 문이 실행되어 이를 처리하는 방식과 직접 구현하는 방식이 있다.
생성된 테이블은 로그인을 유지하는데 필요한 정보를 보관하는 용도일 뿐이므로, 커스터마이징 보단 지정된 형식 테이블을 생성한다.

스프링 시큐리티의 공식 문서의 로그인 정보를 유지하는 테이블은 다음과 같다.


    CREATE TABLE persistent_logins (
        username VARCHAR2(64) NOT NULL,
        series VARCHAR2(64) PRIMARY KEY,
        token VARCHAR2(64) NOT NULL,
        last_used TIMESTAMP NOT NULL
    );


테이블 생성하는 스크립트는 특정 데이터베이스에 맞게 테이블 이름과 컬럼명을 제외한 컬럼 타입 등을 조정하여 사용하면 된다.
오라클에선 VARCHAR 를 그대로 사용하거나 VARCHAR2 로 사용하면 된다.

자동 로그인에서 데이터베이스를 이용하는 설정은 별도의 설정 없이 data-source-ref 만을 지정하면 된다.


    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/sample3/all" access="permitAll" />

        <security:intercept-url pattern="/sample3/member" access="hasRole('ROLE_MEMBER')" />

        <security:intercept-url pattern="/sample3/admin" access="hasRole('ROLE_ADMIN')" />

        <!-- <security:access-denied-handler error-page="/accessError" /> -->
        <security:access-denied-handler ref="customAccessDenied" />

        <!-- <security:form-login /> -->
        <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />

        <security:logout logout-url="/customLogout" invalidate-session="true" />

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
    </security:http>


        35.1.1 로그인 화면에 자동 로그인 설정

자동 로그인은 로그인 화면에서 선택해 처리되므로, 체크 박스의 형태로 구현하고 <input> 태그의 name 속성값은 'remember-me' 이다.


    <form method="post" action="/login">
        <div>
            <input type="text" name="username" value="admin">
        </div>
        <div>
            <input type="password" name="password" value="admin">
        </div>
        <div>
            <input type="checkbox" name="remember-me"> Remember Me
        </div>
        <div>
            <input type="submit">
        </div>
        <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}">
    </form>
    </body>
    </html>


프로젝트 실행 후 'Remember-me' 를 체크 후 브라우저에 쿠키를 조사하면 자동으로 'remember-me' 란 이름의 쿠키가 생긴다.

데이터베이스의 'persistent_logins' 테이블에도 사용자가 로그인한 정보가 남아 있는 것을 볼 수 있다.

'remember-me' 이름으로 생성된 쿠키는 유효기간이 있어, 브라우저 완전 종료 후 다시 '/sample3/admin' 과 같이
로그인 페이지에 접속하면 정상 로그인되는 것을 확인할 수 있다.

브라우저 종료 후 '/sample3/admin' 을 호출했을 때 브라우저가 보내는 정보를 확인해 보면
'remember-me' 쿠키 정보가 전송된 것을 볼 수 있다.


        35.1.2 로그아웃 시 쿠키 삭제

자동 로그인 기능을 이용할 경우 사용자가 로그아웃을 하면 기존과 달리 자동 로그인에 사용하는 쿠키도
삭제해 주도록 쿠키를 삭제하는 항목을 security-context.xml 에 지정한다.


    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/sample3/all" access="permitAll" />

        <security:intercept-url pattern="/sample3/member" access="hasRole('ROLE_MEMBER')" />

        <security:intercept-url pattern="/sample3/admin" access="hasRole('ROLE_ADMIN')" />

        <!-- <security:access-denied-handler error-page="/accessError" /> -->
        <security:access-denied-handler ref="customAccessDenied" />

        <!-- <security:form-login /> -->
        <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />

        <security:logout logout-url="/customLogout" invalidate-session="true" />

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />

        <security:logout logout-url="/customLogout" invalidate-session="true"
                         delete-cookies="remember-me,JSESSION_ID" />
    </security:http>


별도 설정이 없다면 자동 로그인에 사용한 쿠키는 'remember-me' 이고, 톰캣으로 실행하면 WAS 가 발행하는 쿠키 이름은
'JSESSION_ID' 이다. 톰캣이 발행하는 쿠키는 굳이 지정할 필요는 없지만 관련 모든 쿠키를 같이 삭제하는 것이 좋다.